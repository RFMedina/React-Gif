{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,mCACE,sBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMd,SACE,sBAAKO,UAAU,qDAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mBAAGA,UAAU,oBAGf,uBACEC,KAAK,OACLC,MAAOV,EACPW,SAzBc,SAACR,GACzBF,EAAcE,EAAES,OAAOF,QAyBbF,UAAU,eACVK,YAAY,mBAGhB,+B,+BCpCGC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OADAc,QAAQC,IAAIL,EAAOV,GAEjB,qBAAKT,UAAU,0CAAf,SACE,qBAAKyB,IAAKhB,EAAKiB,IAAKP,OCFbQ,EAAU,SAAC,GAAkB,IACxC,ECD0B,SAACpB,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACf,GACtBa,EAAS,CACPhB,KAAMG,EACNW,SAAS,SAGZ,CAACrB,IACGsB,EDb2BI,CADK,EAAf1B,UACVa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QACtB,OACE,qCACGA,GAAW,4CACZ,qBAAK5B,UAAU,YAAf,SACGoB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEPnBgB,EAAe,WAC1B,MAAoC3C,mBAAS,CAAC,KAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,oBAAIU,UAAU,wCAAd,0BACA,cAAC,EAAD,CAAaV,cAAeA,IAE5B,6BACG6C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTxB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.b390ffd7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"divHrPrincipal animate__animated animate__fadeInUp\">\r\n          <div className=\"search-box \">\r\n            <button className=\"btn-search\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n              className=\"input-search\"\r\n              placeholder=\"BÃºsqueda\"\r\n            />\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=20&api_key=ihX69UX10wBWTZe7eQ7k0DM61GRYo5E7`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  console.log(title, url);\r\n  return (\r\n    <div className=\"card animate__animated animate__flipInX\">\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((img) => {\r\n      setstate({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['']);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"animate__animated animate__fadeInDown\">Busca tu GIF</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}