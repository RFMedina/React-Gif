{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,mCACE,sBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMd,SACE,sBAAKO,UAAU,qDAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mBAAGA,UAAU,oBAGf,uBACEC,KAAK,OACLC,MAAOV,EACPW,SAzBc,SAACR,GACzBF,EAAcE,EAAES,OAAOF,QAyBbF,UAAU,eACVK,YAAY,mBAGhB,+B,+BCpCGC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OADAc,QAAQC,IAAIL,EAAOV,GAEjB,qBAAKT,UAAU,0CAAf,SACE,qBAAKyB,IAAKhB,EAAKiB,IAAKP,OCFbQ,EAAU,SAAC,GAAkB,IACxC,ECD0B,SAACpB,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACf,GACtBgB,YAAW,WACTH,EAAS,CACPhB,KAAMG,EACNW,SAAS,MAEV,UAEJ,CAACrB,IACGsB,EDf2BK,CADK,EAAf3B,UACVa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QACtB,OACE,qCACGA,EAAU,8DAA+B,4DAC1C,qBAAK5B,UAAU,YAAf,SACGoB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEPnBiB,EAAe,WAC1B,MAAoC5C,mBAAS,CAAC,KAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACE,qCACE,oBAAIU,UAAU,wCAAd,0BACA,cAAC,EAAD,CAAaV,cAAeA,IAE5B,6BACG8C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTxB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.4b04135b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"divHrPrincipal animate__animated animate__fadeInUp\">\n          <div className=\"search-box \">\n            <button className=\"btn-search\">\n              <i className=\"fas fa-search\"></i>\n            </button>\n\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"input-search\"\n              placeholder=\"Búsqueda\"\n            />\n          </div>\n          <hr />\n        </div>\n      </form>\n    </>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=20&api_key=ihX69UX10wBWTZe7eQ7k0DM61GRYo5E7`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  console.log(title, url);\n  return (\n    <div className=\"card animate__animated animate__flipInX\">\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n  return (\n    <>\n      {loading ? <p>Miryam, dame cariño ❤</p> : <p>Cariño recibido, gracias</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((img) => {\n      setTimeout(() => {\n        setstate({\n          data: img,\n          loading: false,\n        });\n      }, 1000);\n    });\n  }, [category]);\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['']);\n\n  return (\n    <>\n      <h2 className=\"animate__animated animate__fadeInDown\">Busca tu GIF</h2>\n      <AddCategory setCategories={setCategories} />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}